# Generated by Django 5.1.5 on 2025-06-13 03:18

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('machines', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategorieTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('couleur', models.CharField(default='#007bff', help_text='Couleur hexadécimale', max_length=7)),
                ('icone', models.CharField(blank=True, max_length=50)),
                ('actif', models.BooleanField(default=True)),
                ('sla_heures', models.IntegerField(default=24, help_text='SLA en heures')),
                ('assignation_auto', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Catégorie de ticket',
                'verbose_name_plural': 'Catégories de tickets',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='SLA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('temps_reponse_critique', models.IntegerField(default=1)),
                ('temps_reponse_haute', models.IntegerField(default=4)),
                ('temps_reponse_normale', models.IntegerField(default=24)),
                ('temps_reponse_basse', models.IntegerField(default=72)),
                ('temps_resolution_critique', models.IntegerField(default=4)),
                ('temps_resolution_haute', models.IntegerField(default=8)),
                ('temps_resolution_normale', models.IntegerField(default=48)),
                ('temps_resolution_basse', models.IntegerField(default=168)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'SLA',
                'verbose_name_plural': 'SLAs',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='CommentaireTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_commentaire', models.CharField(choices=[('commentaire', 'Commentaire'), ('solution', 'Solution'), ('escalade', 'Escalade'), ('fermeture', 'Fermeture'), ('reouverture', 'Réouverture'), ('assignation', 'Assignation')], default='commentaire', max_length=20)),
                ('contenu', models.TextField()),
                ('prive', models.BooleanField(default=False, help_text='Visible uniquement par les techniciens')),
                ('temps_passe', models.DurationField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Commentaire de ticket',
                'verbose_name_plural': 'Commentaires de tickets',
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ModeleTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('titre_defaut', models.CharField(max_length=200)),
                ('contenu_defaut', models.TextField()),
                ('priorite_defaut', models.CharField(choices=[('basse', 'Basse'), ('normale', 'Normale'), ('haute', 'Haute'), ('critique', 'Critique'), ('urgente', 'Urgente')], default='normale', max_length=20)),
                ('actif', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('categorie_defaut', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tickets.categorieticket')),
            ],
            options={
                'verbose_name': 'Modèle de ticket',
                'verbose_name_plural': 'Modèles de tickets',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero', models.CharField(editable=False, max_length=20, unique=True)),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type_ticket', models.CharField(choices=[('incident', 'Incident'), ('demande', 'Demande'), ('probleme', 'Problème'), ('changement', 'Changement')], default='incident', max_length=20)),
                ('priorite', models.CharField(choices=[('basse', 'Basse'), ('normale', 'Normale'), ('haute', 'Haute'), ('critique', 'Critique'), ('urgente', 'Urgente')], default='normale', max_length=20)),
                ('statut', models.CharField(choices=[('nouveau', 'Nouveau'), ('assigne', 'Assigné'), ('en_cours', 'En cours'), ('en_attente', 'En attente'), ('resolu', 'Résolu'), ('ferme', 'Fermé'), ('rejete', 'Rejeté')], default='nouveau', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_assignation', models.DateTimeField(blank=True, null=True)),
                ('date_premiere_reponse', models.DateTimeField(blank=True, null=True)),
                ('date_resolution', models.DateTimeField(blank=True, null=True)),
                ('date_fermeture', models.DateTimeField(blank=True, null=True)),
                ('date_echeance', models.DateTimeField(blank=True, null=True)),
                ('temps_resolution', models.DurationField(blank=True, null=True)),
                ('note_satisfaction', models.IntegerField(blank=True, help_text='Note de 1 à 5', null=True)),
                ('commentaire_satisfaction', models.TextField(blank=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('assigne_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_assignes', to=settings.AUTH_USER_MODEL)),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tickets.categorieticket')),
                ('demandeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets_demandes', to=settings.AUTH_USER_MODEL)),
                ('machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='machines.machine')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='PieceJointeTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom_fichier', models.CharField(max_length=255)),
                ('fichier', models.FileField(upload_to='tickets/attachments/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt', 'jpg', 'jpeg', 'png', 'gif', 'zip', 'rar'])])),
                ('taille', models.BigIntegerField(help_text='Taille en bytes')),
                ('type_mime', models.CharField(max_length=100)),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('commentaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pieces_jointes', to='tickets.commentaireticket')),
                ('uploade_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces_jointes', to='tickets.ticket')),
            ],
            options={
                'verbose_name': 'Pièce jointe',
                'verbose_name_plural': 'Pièces jointes',
                'ordering': ['date_upload'],
            },
        ),
        migrations.CreateModel(
            name='EscaladeTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('motif', models.TextField()),
                ('date_escalade', models.DateTimeField(auto_now_add=True)),
                ('de_utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escalades_envoyees', to=settings.AUTH_USER_MODEL)),
                ('vers_utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escalades_recues', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escalades', to='tickets.ticket')),
            ],
            options={
                'verbose_name': 'Escalade de ticket',
                'verbose_name_plural': 'Escalades de tickets',
                'ordering': ['-date_escalade'],
            },
        ),
        migrations.AddField(
            model_name='commentaireticket',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires', to='tickets.ticket'),
        ),
    ]
