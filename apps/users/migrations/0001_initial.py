# Generated by Django 5.1.5 on 2025-06-13 03:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('actif', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Groupe',
                'verbose_name_plural': 'Groupes',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('adresse', models.TextField()),
                ('actif', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(help_text="Code court pour l'entreprise (ex: jessmi)", max_length=10, unique=True)),
                ('adresse', models.TextField(blank=True)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('site_web', models.URLField(blank=True)),
                ('actif', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Structure',
                'verbose_name_plural': 'Structures',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prenom', models.CharField(max_length=50)),
                ('nom', models.CharField(max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('poste', models.CharField(blank=True, max_length=100)),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('technicien', 'Technicien'), ('utilisateur', 'Utilisateur')], default='utilisateur', max_length=20)),
                ('actif', models.BooleanField(default=True)),
                ('derniere_connexion_app', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('notifications_email', models.BooleanField(default=True)),
                ('langue', models.CharField(choices=[('fr', 'Fran√ßais'), ('en', 'English')], default='fr', max_length=5)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('groupe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs', to='users.groupe')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs', to='users.site')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utilisateurs', to='users.structure')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'ordering': ['nom', 'prenom'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JournalConnexion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('adresse_ip', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('date_connexion', models.DateTimeField(auto_now_add=True)),
                ('date_deconnexion', models.DateTimeField(blank=True, null=True)),
                ('duree_session', models.DurationField(blank=True, null=True)),
                ('type_connexion', models.CharField(choices=[('desktop', 'Application Desktop'), ('web', 'Interface Web'), ('mobile', 'Application Mobile'), ('api', 'API')], default='desktop', max_length=20)),
                ('succes', models.BooleanField(default=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connexions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Journal de connexion',
                'verbose_name_plural': 'Journaux de connexions',
                'ordering': ['-date_connexion'],
            },
        ),
        migrations.AddField(
            model_name='site',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='users.structure'),
        ),
        migrations.AddField(
            model_name='groupe',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupes', to='users.structure'),
        ),
        migrations.AlterUniqueTogether(
            name='site',
            unique_together={('nom', 'structure')},
        ),
        migrations.AlterUniqueTogether(
            name='groupe',
            unique_together={('nom', 'structure')},
        ),
    ]
